// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Cashmere.Finacle.Integration.CQRS.DataAccessLayer.Models
{
    /// <summary>
    /// Transactions that the system can perform e.g. regular deposit, Mpesa deposit, etc
    /// </summary>
    [Table("TransactionTypeListItem")]
    [Index("DefaultAccountCurrency", Name = "idefault_account_currency_TransactionTypeListItem")]
    public partial class TransactionTypeListItem
    {
        public TransactionTypeListItem()
        {
        }

        [Key]
        [Column("id")]
        public int Id { get; set; }
        /// <summary>
        /// common name for the transaction e.g. Mpesa Deposit
        /// </summary>
        [Required]
        [Column("name")]
        [StringLength(50)]
        public string Name { get; set; }
        /// <summary>
        /// common description for the transaction type
        /// </summary>
        [Column("description")]
        [StringLength(255)]
        public string Description { get; set; }
        /// <summary>
        /// the location of the picture representing the transaction in the GUI
        /// </summary>
        [Column("icon_path")]
        [StringLength(255)]
        public string IconPath { get; set; }
        [Column("validate_reference_account")]
        public bool ValidateReferenceAccount { get; set; }
        /// <summary>
        /// the default account that pre-polulates the AccountNumber of a transaction
        /// </summary>
        [Column("default_account")]
        [StringLength(50)]
        public string DefaultAccount { get; set; }
        [Column("default_account_name")]
        [StringLength(50)]
        public string DefaultAccountName { get; set; }
        [Required]
        [Column("default_account_currency")]
        [StringLength(3)]
        [Unicode(false)]
        public string DefaultAccountCurrency { get; set; }
        [Column("validate_default_account")]
        public bool ValidateDefaultAccount { get; set; }
        [Required]
        [Column("enabled")]
        public bool? Enabled { get; set; }
        /// <summary>
        /// A string passed to core banking with transaction details so core banking can route the deposit to the correct handler
        /// </summary>
        [Column("cb_tx_type")]
        [StringLength(50)]
        public string CbTxType { get; set; }
        [Column("username")]
        [StringLength(50)]
        public string Username { get; set; }
        [Column("password")]
        public string Password { get; set; }
        /// <summary>
        /// Whether to show the source of funds screen after deposit limit is reached or passed
        /// </summary>
        [Column("show_funds_source")]
        public bool ShowFundsSource { get; set; }
        /// <summary>
        /// The amount after which the Source of Funds screen will be shown
        /// </summary>
        [Column("funds_source_amount")]
        public int FundsSourceAmount { get; set; }
        /// <summary>
        /// CDM will not accept further deposits past the maximum
        /// </summary>
        [Column("prevent_overdeposit")]
        public bool PreventOverdeposit { get; set; }
        /// <summary>
        /// The amount after which the CDM will disable the counter
        /// </summary>
        [Column("overdeposit_amount")]
        public int OverdepositAmount { get; set; }

        [ForeignKey("DefaultAccountCurrency")]
        public virtual Currency DefaultAccountCurrencyNavigation { get; set; }
    }
}