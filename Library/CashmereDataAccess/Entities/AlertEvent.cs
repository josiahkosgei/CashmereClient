// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Cashmere.Library.CashmereDataAccess.Entities
{
    [Table("AlertEvent")]
    public partial class AlertEvent
    {
        public AlertEvent()
        {
            AlertEmails = new HashSet<AlertEmail>();
            AlertSMS = new HashSet<AlertSMS>();
            InverseAlertEventNavigation = new HashSet<AlertEvent>();
        }

        [Key]
        [Column("id")]
        public Guid Id { get; set; }
        [Column("device_id")]
        public Guid DeviceId { get; set; }
        [Column("created")]
        public DateTime Created { get; set; }
        [Column("alert_type_id")]
        public int AlertTypeId { get; set; }
        [Column("date_detected")]
        public DateTime DateDetected { get; set; }
        [Column("date_resolved")]
        public DateTime? DateResolved { get; set; }
        [Column("is_resolved")]
        public bool IsResolved { get; set; }
        [Column("is_processed")]
        public bool IsProcessed { get; set; }
        [Column("alert_event_id")]
        public Guid? AlertEventId { get; set; }
        [Column("is_processing")]
        public bool IsProcessing { get; set; }
        [Column("machine_name")]
        [StringLength(50)]
        public string MachineName { get; set; } = null!;

        [ForeignKey("AlertEventId")]
        //[InverseProperty("InverseAlertEventNavigation")]
        public virtual AlertEvent? AlertEventNavigation { get; set; }
        //[InverseProperty("AlertEvent")]
        public virtual ICollection<AlertEmail> AlertEmails { get; set; }
        //[InverseProperty("AlertEvent")]
        public virtual ICollection<AlertSMS> AlertSMS { get; set; }
        //[InverseProperty("AlertEventNavigation")]
        public virtual ICollection<AlertEvent> InverseAlertEventNavigation { get; set; }
    }
}