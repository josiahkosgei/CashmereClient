// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Cashmere.Library.CashmereDataAccess.Entities
{
    [Table("TransactionLimitList")]
    public partial class TransactionLimitList
    {
        public bool Get_prevent_overdeposit(Currency currency)
        {
            TransactionLimitListItem transactionLimitListItem = this.TransactionLimitListItems.FirstOrDefault<TransactionLimitListItem>((Func<TransactionLimitListItem, bool>)(x => x.CurrencyCodeNavigation == currency));
            return transactionLimitListItem != null && transactionLimitListItem.PreventOverdeposit;
        }

        public long Get_overdeposit_amount(Currency currency)
        {
            TransactionLimitListItem transactionLimitListItem = this.TransactionLimitListItems.FirstOrDefault<TransactionLimitListItem>((Func<TransactionLimitListItem, bool>)(x => x.CurrencyCodeNavigation == currency));
            return transactionLimitListItem == null ? 0L : transactionLimitListItem.OverdepositAmount;
        }

        public bool Get_prevent_underdeposit(Currency currency)
        {
            TransactionLimitListItem transactionLimitListItem = this.TransactionLimitListItems.FirstOrDefault<TransactionLimitListItem>((Func<TransactionLimitListItem, bool>)(x => x.CurrencyCodeNavigation == currency));
            return transactionLimitListItem != null && (bool)transactionLimitListItem.PreventUnderdeposit;
        }

        public long Get_underdeposit_amount(Currency currency)
        {
            TransactionLimitListItem transactionLimitListItem = this.TransactionLimitListItems.FirstOrDefault<TransactionLimitListItem>((Func<TransactionLimitListItem, bool>)(x => x.CurrencyCodeNavigation == currency));
            return transactionLimitListItem == null ? 0L : transactionLimitListItem.UnderdepositAmount;
        }

        public bool Get_prevent_overcount(Currency currency)
        {
            TransactionLimitListItem transactionLimitListItem = this.TransactionLimitListItems.FirstOrDefault<TransactionLimitListItem>((Func<TransactionLimitListItem, bool>)(x => x.CurrencyCodeNavigation == currency));
            return transactionLimitListItem != null && transactionLimitListItem.PreventOvercount;
        }

        public long Get_overcount_amount(Currency currency)
        {
            TransactionLimitListItem transactionLimitListItem = this.TransactionLimitListItems.FirstOrDefault<TransactionLimitListItem>((Func<TransactionLimitListItem, bool>)(x => x.CurrencyCodeNavigation == currency));
            return transactionLimitListItem != null ? (long)transactionLimitListItem.OvercountAmount : 0L;
        }

        public TransactionLimitList()
        {
            TransactionLimitListItems = new HashSet<TransactionLimitListItem>();
            TransactionTypeListItems = new HashSet<TransactionTypeListItem>();
        }

        [Key]
        [Column("id")]
        public Guid Id { get; set; }
        [Column("name")]
        [StringLength(50)]
        public string Name { get; set; } = null!;
        [Column("description")]
        [StringLength(255)]
        public string? Description { get; set; }

        //[InverseProperty("Transactionitemlist")]
        public virtual ICollection<TransactionLimitListItem> TransactionLimitListItems { get; set; }
        //[InverseProperty("TxLimitListNavigation")]
        public virtual ICollection<TransactionTypeListItem> TransactionTypeListItems { get; set; }
    }
}