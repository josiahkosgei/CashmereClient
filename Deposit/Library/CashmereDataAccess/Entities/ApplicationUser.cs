// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Cashmere.Library.CashmereDataAccess.Entities
{
    [Table("ApplicationUser")]
    // [Index("Username", Name = "UX_ApplicationUser_Username", IsUnique = true)]
    // [Index("ApplicationUserLoginDetail", Name = "iApplicationUserLoginDetail_ApplicationUser")]
    // [Index("RoleId", Name = "irole_id_ApplicationUser")]
    // [Index("UserGroup", Name = "iuser_group_ApplicationUser")]
    public partial class ApplicationUser
    {
        public ApplicationUser()
        {
            CITAuthUsers = new HashSet<CIT>();
            CITStartUsers = new HashSet<CIT>();
            DeviceLocks = new HashSet<DeviceLock>();
            DeviceLogins = new HashSet<DeviceLogin>();
            EscrowJamAuthorisingUsers = new HashSet<EscrowJam>();
            EscrowJamInitialisingUsers = new HashSet<EscrowJam>();
            PasswordHistories = new HashSet<PasswordHistory>();
            TransactionAuthUsers = new HashSet<Transaction>();
            TransactionInitUsers = new HashSet<Transaction>();
            UserLocks = new HashSet<UserLock>();
        }

        [Key]
        [Column("id")]
        public Guid Id { get; set; }
        [Column("username")]
        [StringLength(255)]
        public string Username { get; set; } = null!;
        [Column("password")]
        [StringLength(71)]
        [Unicode(false)]
        public string Password { get; set; } = null!;
        [Column("fname")]
        [StringLength(50)]
        public string Fname { get; set; } = null!;
        [Column("lname")]
        [StringLength(50)]
        public string Lname { get; set; } = null!;
        [Column("role_id")]
        public Guid RoleId { get; set; }
        [Column("email")]
        [StringLength(50)]
        public string? Email { get; set; }
        [Required]
        [Column("email_enabled")]
        public bool? EmailEnabled { get; set; }
        [Column("phone")]
        [StringLength(50)]
        public string? Phone { get; set; }
        [Column("phone_enabled")]
        public bool PhoneEnabled { get; set; }
        [Column("password_reset_required")]
        public bool PasswordResetRequired { get; set; }
        [Column("login_attempts")]
        public int LoginAttempts { get; set; }
        [Column("user_group")]
        public int UserGroup { get; set; }
        [Column("depositor_enabled")]
        public bool? DepositorEnabled { get; set; }
        public bool? UserDeleted { get; set; }
        public bool? IsActive { get; set; }
        public Guid? ApplicationUserLoginDetail { get; set; }
        [Column("is_ad_user")]
        public bool IsAdUser { get; set; }

        [ForeignKey("RoleId")]
        //[InverseProperty("ApplicationUsers")]
        public virtual Role Role { get; set; } = null!;
        [ForeignKey("UserGroup")]
        //[InverseProperty("ApplicationUsers")]
        public virtual UserGroup UserGroupNavigation { get; set; } = null!;
        //[InverseProperty("AuthUserNavigation")]
        public virtual ICollection<CIT> CITAuthUsers { get; set; }
        //[InverseProperty("StartUserNavigation")]
        public virtual ICollection<CIT> CITStartUsers { get; set; }
        //[InverseProperty("LockingUserNavigation")]
        public virtual ICollection<DeviceLock> DeviceLocks { get; set; }
        //[InverseProperty("UserNavigation")]
        public virtual ICollection<DeviceLogin> DeviceLogins { get; set; }
        //[InverseProperty("AuthorisingUserNavigation")]
        public virtual ICollection<EscrowJam> EscrowJamAuthorisingUsers { get; set; }
        //[InverseProperty("InitialisingUserNavigation")]
        public virtual ICollection<EscrowJam> EscrowJamInitialisingUsers { get; set; }
        //[InverseProperty("UserNavigation")]
        public virtual ICollection<PasswordHistory> PasswordHistories { get; set; }
        //[InverseProperty("AuthUserNavigation")]
        public virtual ICollection<Transaction> TransactionAuthUsers { get; set; }
        //[InverseProperty("InitUserNavigation")]
        public virtual ICollection<Transaction> TransactionInitUsers { get; set; }
        //[InverseProperty("InitiatingUserNavigation")]
        public virtual ICollection<UserLock> UserLocks { get; set; }

        public string FullName => this.Fname + " " + this.Lname;
    }
}